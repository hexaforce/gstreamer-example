Factory Details:
  Rank                     primary (256)
  Long-name                WebRTC Bin
  Klass                    Filter/Network/WebRTC
  Description              A bin for webrtc connections
  Author                   Matthew Waters <matthew@centricular.com>
  Documentation            https://gstreamer.freedesktop.org/documentation/webrtc/#webrtcbin-page

Plugin Details:
  Name                     webrtc
  Description              WebRTC plugins
  Filename                 /usr/local/Cellar/gstreamer/1.24.11/lib/gstreamer-1.0/libgstwebrtc.dylib
  Version                  1.24.11
  License                  LGPL
  Source module            gst-plugins-bad
  Documentation            https://gstreamer.freedesktop.org/documentation/webrtc/
  Source release date      2025-01-06
  Binary package           GStreamer Bad Plug-ins source release
  Origin URL               https://github.com/Homebrew/homebrew-core

GObject
 +----GInitiallyUnowned
       +----GstObject
             +----GstElement
                   +----GstBin
                         +----GstWebRTCBin

Implemented Interfaces:
  GstChildProxy

Pad Templates:
  SINK template: 'sink_%u'
    Availability: On request
    Capabilities:
      application/x-rtp
    Type: GstWebRTCBinSinkPad
    Pad Properties:
    
      msid                : Local MediaStream ID to use for this pad (NULL = unset)
                            flags: 読み込み可能, 書き込み可能
                            String. Default: null
      
      transceiver         : Transceiver associated with this pad
                            flags: 読み込み可能
                            Object of type "GstWebRTCRTPTransceiver"
      
  
  SRC template: 'src_%u'
    Availability: Sometimes
    Capabilities:
      application/x-rtp
    Type: GstWebRTCBinSrcPad
    Pad Properties:
    
      msid                : Remote MediaStream ID in use for this pad (NULL = not advertised)
                            flags: 読み込み可能
                            String. Default: null
      
      transceiver         : Transceiver associated with this pad
                            flags: 読み込み可能
                            Object of type "GstWebRTCRTPTransceiver"
      

Element has no clocking capabilities.
Element has no URI handling capabilities.

Pads:
  none

Element Properties:

  async-handling      : The bin will handle Asynchronous state changes
                        flags: 読み込み可能, 書き込み可能
                        Boolean. Default: false
  
  bundle-policy       : The policy to apply for bundling
                        flags: 読み込み可能, 書き込み可能
                        Enum "GstWebRTCBundlePolicy" Default: 0, "none"
                           (0): none             - GST_WEBRTC_BUNDLE_POLICY_NONE
                           (1): balanced         - GST_WEBRTC_BUNDLE_POLICY_BALANCED
                           (2): max-compat       - GST_WEBRTC_BUNDLE_POLICY_MAX_COMPAT
                           (3): max-bundle       - GST_WEBRTC_BUNDLE_POLICY_MAX_BUNDLE
  
  connection-state    : The overall connection state of this element
                        flags: 読み込み可能
                        Enum "GstWebRTCPeerConnectionState" Default: 0, "new"
                           (0): new              - GST_WEBRTC_PEER_CONNECTION_STATE_NEW
                           (1): connecting       - GST_WEBRTC_PEER_CONNECTION_STATE_CONNECTING
                           (2): connected        - GST_WEBRTC_PEER_CONNECTION_STATE_CONNECTED
                           (3): disconnected     - GST_WEBRTC_PEER_CONNECTION_STATE_DISCONNECTED
                           (4): failed           - GST_WEBRTC_PEER_CONNECTION_STATE_FAILED
                           (5): closed           - GST_WEBRTC_PEER_CONNECTION_STATE_CLOSED
  
  current-local-description: The local description that was successfully negotiated the last time the connection transitioned into the stable state
                        flags: 読み込み可能
                        Boxed pointer of type "GstWebRTCSessionDescription"
  
  current-remote-description: The last remote description that was successfully negotiated the last time the connection transitioned into the stable state plus any remote candidates that have been supplied via addIceCandidate() since the offer or answer was created
                        flags: 読み込み可能
                        Boxed pointer of type "GstWebRTCSessionDescription"
  
  http-proxy          : A HTTP proxy for use with TURN/TCP of the form http://[username:password@]hostname[:port][?alpn=<alpn>]
                        flags: 読み込み可能, 書き込み可能
                        String. Default: null
  
  ice-agent           : The WebRTC ICE agent
                        flags: 読み込み可能, 書き込み可能, can be set only at object construction time
                        Object of type "GstWebRTCICE"
  
  ice-connection-state: The collective connection state of all ICETransport's
                        flags: 読み込み可能
                        Enum "GstWebRTCICEConnectionState" Default: 0, "new"
                           (0): new              - GST_WEBRTC_ICE_CONNECTION_STATE_NEW
                           (1): checking         - GST_WEBRTC_ICE_CONNECTION_STATE_CHECKING
                           (2): connected        - GST_WEBRTC_ICE_CONNECTION_STATE_CONNECTED
                           (3): completed        - GST_WEBRTC_ICE_CONNECTION_STATE_COMPLETED
                           (4): failed           - GST_WEBRTC_ICE_CONNECTION_STATE_FAILED
                           (5): disconnected     - GST_WEBRTC_ICE_CONNECTION_STATE_DISCONNECTED
                           (6): closed           - GST_WEBRTC_ICE_CONNECTION_STATE_CLOSED
  
  ice-gathering-state : The collective gathering state of all ICETransport's
                        flags: 読み込み可能
                        Enum "GstWebRTCICEGatheringState" Default: 0, "new"
                           (0): new              - GST_WEBRTC_ICE_GATHERING_STATE_NEW
                           (1): gathering        - GST_WEBRTC_ICE_GATHERING_STATE_GATHERING
                           (2): complete         - GST_WEBRTC_ICE_GATHERING_STATE_COMPLETE
  
  ice-transport-policy: The policy to apply for ICE transport
                        flags: 読み込み可能, 書き込み可能
                        Enum "GstWebRTCICETransportPolicy" Default: 0, "all"
                           (0): all              - GST_WEBRTC_ICE_TRANSPORT_POLICY_ALL
                           (1): relay            - GST_WEBRTC_ICE_TRANSPORT_POLICY_RELAY
  
  latency             : Default duration to buffer in the jitterbuffers (in ms)
                        flags: 読み込み可能, 書き込み可能
                        Unsigned Integer. Range: 0 - 4294967295 Default: 200 
  
  local-description   : The local SDP description in use for this connection. Favours a pending description over the current description
                        flags: 読み込み可能
                        Boxed pointer of type "GstWebRTCSessionDescription"
  
  message-forward     : Forwards all children messages
                        flags: 読み込み可能, 書き込み可能
                        Boolean. Default: false
  
  name                : The name of the object
                        flags: 読み込み可能, 書き込み可能
                        String. Default: "webrtcbin0"
  
  parent              : The parent of the object
                        flags: 読み込み可能, 書き込み可能
                        Object of type "GstObject"
  
  pending-local-description: The local description that is in the process of being negotiated plus any local candidates that have been generated by the ICE Agent since the offer or answer was created
                        flags: 読み込み可能
                        Boxed pointer of type "GstWebRTCSessionDescription"
  
  pending-remote-description: The remote description that is in the process of being negotiated, complete with any remote candidates that have been supplied via addIceCandidate() since the offer or answer was created
                        flags: 読み込み可能
                        Boxed pointer of type "GstWebRTCSessionDescription"
  
  remote-description  : The remote SDP description to use for this connection. Favours a pending description over the current description
                        flags: 読み込み可能
                        Boxed pointer of type "GstWebRTCSessionDescription"
  
  sctp-transport      : The WebRTC SCTP Transport
                        flags: 読み込み可能
                        Object of type "GstWebRTCSCTPTransport"
  
  signaling-state     : The signaling state of this element
                        flags: 読み込み可能
                        Enum "GstWebRTCSignalingState" Default: 0, "stable"
                           (0): stable           - GST_WEBRTC_SIGNALING_STATE_STABLE
                           (1): closed           - GST_WEBRTC_SIGNALING_STATE_CLOSED
                           (2): have-local-offer - GST_WEBRTC_SIGNALING_STATE_HAVE_LOCAL_OFFER
                           (3): have-remote-offer - GST_WEBRTC_SIGNALING_STATE_HAVE_REMOTE_OFFER
                           (4): have-local-pranswer - GST_WEBRTC_SIGNALING_STATE_HAVE_LOCAL_PRANSWER
                           (5): have-remote-pranswer - GST_WEBRTC_SIGNALING_STATE_HAVE_REMOTE_PRANSWER
  
  stun-server         : The STUN server of the form stun://hostname:port
                        flags: 読み込み可能, 書き込み可能
                        String. Default: null
  
  turn-server         : The TURN server of the form turn(s)://username:password@host:port. To use time-limited credentials, the form must be turn(s)://timestamp:username:password@host:port. Please note that the ':' character of the 'timestamp:username' and the 'password' encoded by base64 should be escaped to be parsed properly. This is a convenience property, use #GstWebRTCBin::add-turn-server if you wish to use multiple TURN servers
                        flags: 読み込み可能, 書き込み可能
                        String. Default: null
  

Element Signals:

  "pad-added" :  void user_function (GstElement * object,
                                     GstPad * arg0,
                                     gpointer user_data);

  "pad-removed" :  void user_function (GstElement * object,
                                       GstPad * arg0,
                                       gpointer user_data);

  "no-more-pads" :  void user_function (GstElement * object,
                                        gpointer user_data);

  "on-negotiation-needed" :  void user_function (GstElement * object,
                                                 gpointer user_data);

  "on-ice-candidate" :  void user_function (GstElement * object,
                                            guint arg0,
                                            const gchar * arg1,
                                            gpointer user_data);

  "on-new-transceiver" :  void user_function (GstElement * object,
                                              GstWebRTCRTPTransceiver * arg0,
                                              gpointer user_data);

  "on-data-channel" :  void user_function (GstElement * object,
                                           GstWebRTCDataChannel * arg0,
                                           gpointer user_data);

  "prepare-data-channel" :  void user_function (GstElement * object,
                                                GstWebRTCDataChannel * arg0,
                                                gboolean arg1,
                                                gpointer user_data);

  "request-aux-sender" :  GstElement * user_function (GstElement * object,
                                                      GstWebRTCDTLSTransport * arg0,
                                                      gpointer user_data);


Element Actions:

  "create-offer" -> void  :  g_signal_emit_by_name (element, "create-offer",
                                                    GstStructure * arg0,
                                                    GstPromise * arg1);

  "create-answer" -> void  :  g_signal_emit_by_name (element, "create-answer",
                                                     GstStructure * arg0,
                                                     GstPromise * arg1);

  "set-local-description" -> void  :  g_signal_emit_by_name (element, "set-local-description",
                                                             GstWebRTCSessionDescription * arg0,
                                                             GstPromise * arg1);

  "set-remote-description" -> void  :  g_signal_emit_by_name (element, "set-remote-description",
                                                              GstWebRTCSessionDescription * arg0,
                                                              GstPromise * arg1);

  "add-ice-candidate" -> void  :  g_signal_emit_by_name (element, "add-ice-candidate",
                                                         guint arg0,
                                                         const gchar * arg1);

  "add-ice-candidate-full" -> void  :  g_signal_emit_by_name (element, "add-ice-candidate-full",
                                                              guint arg0,
                                                              const gchar * arg1,
                                                              GstPromise * arg2);

  "get-stats" -> void  :  g_signal_emit_by_name (element, "get-stats",
                                                 GstPad * arg0,
                                                 GstPromise * arg1);

  "add-transceiver" -> GstWebRTCRTPTransceiver  * :  g_signal_emit_by_name (element, "add-transceiver",
                                                                            GstWebRTCRTPTransceiverDirection arg0,
                                                                            GstCaps * arg1,
                                                                            GstWebRTCRTPTransceiver * * p_return_value);

  "get-transceivers" -> GArray  * :  g_signal_emit_by_name (element, "get-transceivers",
                                                            GArray * * p_return_value);

  "get-transceiver" -> GstWebRTCRTPTransceiver  * :  g_signal_emit_by_name (element, "get-transceiver",
                                                                            gint arg0,
                                                                            GstWebRTCRTPTransceiver * * p_return_value);

  "add-turn-server" -> gboolean  :  g_signal_emit_by_name (element, "add-turn-server",
                                                           const gchar * arg0,
                                                           gboolean * p_return_value);

  "create-data-channel" -> GstWebRTCDataChannel  * :  g_signal_emit_by_name (element, "create-data-channel",
                                                                             const gchar * arg0,
                                                                             GstStructure * arg1,
                                                                             GstWebRTCDataChannel * * p_return_value);


Children:
  rtpbin
